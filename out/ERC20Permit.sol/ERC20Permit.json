{"abi":[{"type":"function","name":"DOMAIN_SEPARATOR","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"allowance","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"approve","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"eip712Domain","inputs":[],"outputs":[{"name":"fields","type":"bytes1","internalType":"bytes1"},{"name":"name","type":"string","internalType":"string"},{"name":"version","type":"string","internalType":"string"},{"name":"chainId","type":"uint256","internalType":"uint256"},{"name":"verifyingContract","type":"address","internalType":"address"},{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"extensions","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"nonces","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"permit","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"transfer","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"transferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"spender","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"EIP712DomainChanged","inputs":[],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"ECDSAInvalidSignature","inputs":[]},{"type":"error","name":"ECDSAInvalidSignatureLength","inputs":[{"name":"length","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ECDSAInvalidSignatureS","inputs":[{"name":"s","type":"bytes32","internalType":"bytes32"}]},{"type":"error","name":"ERC20InsufficientAllowance","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"allowance","type":"uint256","internalType":"uint256"},{"name":"needed","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ERC20InsufficientBalance","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"balance","type":"uint256","internalType":"uint256"},{"name":"needed","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ERC20InvalidApprover","inputs":[{"name":"approver","type":"address","internalType":"address"}]},{"type":"error","name":"ERC20InvalidReceiver","inputs":[{"name":"receiver","type":"address","internalType":"address"}]},{"type":"error","name":"ERC20InvalidSender","inputs":[{"name":"sender","type":"address","internalType":"address"}]},{"type":"error","name":"ERC20InvalidSpender","inputs":[{"name":"spender","type":"address","internalType":"address"}]},{"type":"error","name":"ERC2612ExpiredSignature","inputs":[{"name":"deadline","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ERC2612InvalidSigner","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"InvalidAccountNonce","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"currentNonce","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"InvalidShortString","inputs":[]},{"type":"error","name":"StringTooLong","inputs":[{"name":"str","type":"string","internalType":"string"}]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/interfaces/IERC20Permit.sol\":{\"keccak256\":\"0x01793a95fe659fb3c2eb946efd5b7f2f8159b876abfe34a76a116624225b057b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e36748ae33109988fb33cae8798cc376deac3f3e13109dcf65d576fea35ce5b\",\"dweb:/ipfs/QmP8osHTpbswFdrpt3hvqbPx1Yy6rHgS9i3mhnj9yMVopc\"]},\"contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x6af3cd989089d4a89dfeb88e88a6dcbf098995924357775b0265244e043e232c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://672de8efad3be0ddb538c6bbfdd99dc015713d643042aed04105ca30ad923230\",\"dweb:/ipfs/QmbmDZDxnf7a61AALYZW49UqioaUcHh9zMaug74eGeLamG\"]},\"contracts/libraries/Context.sol\":{\"keccak256\":\"0xdcc3f4379aa5ac0fc5c3c83fa4ffdf4423522dde72827f7925a238550d9cdc45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f0812fd651dad68f3546cb15a6758401ea380005cd53a922183136d6bcd535e\",\"dweb:/ipfs/QmTwwQuQ75iA2XTZnh7HTADtkz3znogZSScgUhfC8HfJst\"]},\"contracts/libraries/ECDSA.sol\":{\"keccak256\":\"0xb9aff79399b70ebf3d1e67bf95272a9d676a05b79de663d9c3dd0b1a5db32900\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca23147776c1af854139a87a66d35c7f5359a8fda1f57e315bfd5ea36360e97f\",\"dweb:/ipfs/QmVJhngMtjSZtWohCeaKkVLkr7eAnFAp23nASYThg4ADXX\"]},\"contracts/libraries/EIP712.sol\":{\"keccak256\":\"0x5bac4f1ee95a3e9606b9af3fc16aa5ea782c33b9e1aece8cfcebc12e5a7b1f93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39d78cb1c261577287b15d8b34193bfe4a6952b70364babb60fd0b583f33f859\",\"dweb:/ipfs/QmccGfTQqSttaBeqkHEaXDmFusy6ZZFAXxsaCgeWKcrtv2\"]},\"contracts/libraries/ERC20.sol\":{\"keccak256\":\"0x5d2b5b6dfad0388b0f5f36f7eec1786edcb9e531ab13b48aeafd99687ed18912\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2eb83ac06193f42209123a60427e295da2d3c67591ff0f37789fca3208ef4929\",\"dweb:/ipfs/QmX6LkoA2i6NpuxPdB6Ba6GKmJSGWCysFwPVmTa4zaKpik\"]},\"contracts/libraries/ERC20Permit.sol\":{\"keccak256\":\"0xc1e0e4bc735d1bfe82092560139c1bc89c8eb90e4bb0a87e70933ff312e1ff71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0d0cf44422ae5bfa8f4ac6e3320e519b4bb66795697a9ea58c56dbe08ad284a\",\"dweb:/ipfs/QmPtC8gq5vC9s36bJFWhsVnC3oqd5gy75ZGfhEcARpaAVL\"]},\"contracts/libraries/IERC20.sol\":{\"keccak256\":\"0xde02cf45d688390dc920bc29102501bf1305630476cc34ea119865d8541252d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bfa330ecd86cc23d24c1b72eed5c04338c4d81f5b32f891c584df7d0ade90b91\",\"dweb:/ipfs/QmWGqwPMQbrK7a1Xpnet1s6yp7pFz4UYrxmuqx27S5cJUX\"]},\"contracts/libraries/IERC20Metadata.sol\":{\"keccak256\":\"0x87ce95e6a8f8907d95e0dd246cd009e74f717417f0a84a57841705da0f90e66f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0cfede3e2a56035b8909df28d790eb339f7677a70e5f27f59efd8b01f167268\",\"dweb:/ipfs/QmS7nyHUnvNLGvFPZfUckWQEVYCdk4EHYjrEymyQq7b74u\"]},\"contracts/libraries/Math.sol\":{\"keccak256\":\"0x67472320dcce4ecb23d18c98a9ffb2c792d83e48e0dc4ba56821f874b84b587b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280d862391e577d3d8d5a5e130669ec9ca8f3430924628b16066b28d44c370eb\",\"dweb:/ipfs/Qmbt18oKNSeyyKwE9GGyyBXAzs9BtSJmAes7k7BipDEesC\"]},\"contracts/libraries/MessageHashUtils.sol\":{\"keccak256\":\"0xeba021d595e7d6678ff6b9792351ee21e48a23505284e4870d0aeb2ef4e35777\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a57914fdbc71af51384e442769ed42aecd927fcc06cee1fea2b098b31d41444b\",\"dweb:/ipfs/QmTw4fvUcVPderxfoYPjZSq6jQDJS397gqWV3tfkCavvQa\"]},\"contracts/libraries/Nonces.sol\":{\"keccak256\":\"0x92b16ac7e2d5fd460043a2897d9b93067475b2f9ac239a89e9dad3da7b112791\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebb8254b5c20fe4bafcaf4b08335c34df63a76a227eacbd223ad65619ec6e4a4\",\"dweb:/ipfs/QmbFGraiHjndnDuagH6oJ97J9HYYAKV7b4A6s245JZLXuf\"]},\"contracts/libraries/ShortStrings.sol\":{\"keccak256\":\"0xb124a7a1d18881f1414f6ea03bb8242582c0ec9e25a8b240f6465426d50bc64d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://649c34c8f305460df19b185edf5b5191605baaab3f7edd25b2e83bd24c573d36\",\"dweb:/ipfs/QmdcpatMCpmyry5Bf5YVyte2JDvmKxtn3oyuN4aTQri9QK\"]},\"contracts/libraries/SignedMath.sol\":{\"keccak256\":\"0xadcde2b1fabce92825e4ab1f30cf6f59f7a1bdcf4c1040e67fee3bf2abc18e89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a311975ca563efd69c59d1089c84a5e14fb59ffe92b7d96448dc9a5694b56bd5\",\"dweb:/ipfs/QmXcLs2iMUfJ8MvdBXsDaDs1hSz9KPetfDAAgRD35okS9q\"]},\"contracts/libraries/StorageSlot.sol\":{\"keccak256\":\"0x921ffa1aba73e914855f9ef2977f210a42202e8e55e731e0390747efca3c0000\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d57b443d06dcbc0a3a51ee3dccddfa3018288c49a855803cdd2c1805df3878e\",\"dweb:/ipfs/Qmbkoua7k7CuM51daUoN2WHf9fukhvKCAFsG1eQRJcDDq5\"]},\"contracts/libraries/Strings.sol\":{\"keccak256\":\"0x10b96c718ed3f69be9995aa5987b12f624fc4c77cba8978e0c42f60e978dc473\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9fbfe80aeb2814b26b5d9366c48d991ca085f0d51b708aa3e654a4285120b6cf\",\"dweb:/ipfs/QmTZLV4uFWpQqVFyf2YUFWx2ayAkaq1P3aPmcbYUzCdHP7\"]},\"contracts/libraries/draft-IERC6093.sol\":{\"keccak256\":\"0x465f0dbe8e33e13af5159f1ff04fa851a38c942df7f02e7a3b73741479999ae2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45e255b740645316bab9331d290cf07d6b7c7972464330bb3fe3f6700ab42682\",\"dweb:/ipfs/QmNcpyFpzNYrWoAj6Au8rgZQsqqmFarKcWwpreiXGbXsno\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"ECDSAInvalidSignature"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"type":"error","name":"ECDSAInvalidSignatureLength"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"type":"error","name":"ECDSAInvalidSignatureS"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"type":"error","name":"ERC20InsufficientAllowance"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"type":"error","name":"ERC20InsufficientBalance"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"type":"error","name":"ERC20InvalidApprover"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"type":"error","name":"ERC20InvalidReceiver"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"type":"error","name":"ERC20InvalidSender"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"type":"error","name":"ERC20InvalidSpender"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"type":"error","name":"ERC2612ExpiredSignature"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"type":"error","name":"ERC2612InvalidSigner"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"type":"error","name":"InvalidAccountNonce"},{"inputs":[],"type":"error","name":"InvalidShortString"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"type":"error","name":"StringTooLong"},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"spender","type":"address","indexed":true},{"internalType":"uint256","name":"value","type":"uint256","indexed":false}],"type":"event","name":"Approval","anonymous":false},{"inputs":[],"type":"event","name":"EIP712DomainChanged","anonymous":false},{"inputs":[{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"value","type":"uint256","indexed":false}],"type":"event","name":"Transfer","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"stateMutability":"view","type":"function","name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"name","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function","name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"permit"},{"inputs":[],"stateMutability":"view","type":"function","name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"eip712Domain()":{"details":"See {IERC-5267}."},"name()":{"details":"Returns the name of the token."},"nonces(address)":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/libraries/ERC20Permit.sol":"ERC20Permit"},"evmVersion":"paris","libraries":{}},"sources":{"contracts/interfaces/IERC20Permit.sol":{"keccak256":"0x01793a95fe659fb3c2eb946efd5b7f2f8159b876abfe34a76a116624225b057b","urls":["bzz-raw://5e36748ae33109988fb33cae8798cc376deac3f3e13109dcf65d576fea35ce5b","dweb:/ipfs/QmP8osHTpbswFdrpt3hvqbPx1Yy6rHgS9i3mhnj9yMVopc"],"license":"MIT"},"contracts/interfaces/IERC5267.sol":{"keccak256":"0x6af3cd989089d4a89dfeb88e88a6dcbf098995924357775b0265244e043e232c","urls":["bzz-raw://672de8efad3be0ddb538c6bbfdd99dc015713d643042aed04105ca30ad923230","dweb:/ipfs/QmbmDZDxnf7a61AALYZW49UqioaUcHh9zMaug74eGeLamG"],"license":"MIT"},"contracts/libraries/Context.sol":{"keccak256":"0xdcc3f4379aa5ac0fc5c3c83fa4ffdf4423522dde72827f7925a238550d9cdc45","urls":["bzz-raw://1f0812fd651dad68f3546cb15a6758401ea380005cd53a922183136d6bcd535e","dweb:/ipfs/QmTwwQuQ75iA2XTZnh7HTADtkz3znogZSScgUhfC8HfJst"],"license":"MIT"},"contracts/libraries/ECDSA.sol":{"keccak256":"0xb9aff79399b70ebf3d1e67bf95272a9d676a05b79de663d9c3dd0b1a5db32900","urls":["bzz-raw://ca23147776c1af854139a87a66d35c7f5359a8fda1f57e315bfd5ea36360e97f","dweb:/ipfs/QmVJhngMtjSZtWohCeaKkVLkr7eAnFAp23nASYThg4ADXX"],"license":"MIT"},"contracts/libraries/EIP712.sol":{"keccak256":"0x5bac4f1ee95a3e9606b9af3fc16aa5ea782c33b9e1aece8cfcebc12e5a7b1f93","urls":["bzz-raw://39d78cb1c261577287b15d8b34193bfe4a6952b70364babb60fd0b583f33f859","dweb:/ipfs/QmccGfTQqSttaBeqkHEaXDmFusy6ZZFAXxsaCgeWKcrtv2"],"license":"MIT"},"contracts/libraries/ERC20.sol":{"keccak256":"0x5d2b5b6dfad0388b0f5f36f7eec1786edcb9e531ab13b48aeafd99687ed18912","urls":["bzz-raw://2eb83ac06193f42209123a60427e295da2d3c67591ff0f37789fca3208ef4929","dweb:/ipfs/QmX6LkoA2i6NpuxPdB6Ba6GKmJSGWCysFwPVmTa4zaKpik"],"license":"MIT"},"contracts/libraries/ERC20Permit.sol":{"keccak256":"0xc1e0e4bc735d1bfe82092560139c1bc89c8eb90e4bb0a87e70933ff312e1ff71","urls":["bzz-raw://b0d0cf44422ae5bfa8f4ac6e3320e519b4bb66795697a9ea58c56dbe08ad284a","dweb:/ipfs/QmPtC8gq5vC9s36bJFWhsVnC3oqd5gy75ZGfhEcARpaAVL"],"license":"MIT"},"contracts/libraries/IERC20.sol":{"keccak256":"0xde02cf45d688390dc920bc29102501bf1305630476cc34ea119865d8541252d3","urls":["bzz-raw://bfa330ecd86cc23d24c1b72eed5c04338c4d81f5b32f891c584df7d0ade90b91","dweb:/ipfs/QmWGqwPMQbrK7a1Xpnet1s6yp7pFz4UYrxmuqx27S5cJUX"],"license":"MIT"},"contracts/libraries/IERC20Metadata.sol":{"keccak256":"0x87ce95e6a8f8907d95e0dd246cd009e74f717417f0a84a57841705da0f90e66f","urls":["bzz-raw://b0cfede3e2a56035b8909df28d790eb339f7677a70e5f27f59efd8b01f167268","dweb:/ipfs/QmS7nyHUnvNLGvFPZfUckWQEVYCdk4EHYjrEymyQq7b74u"],"license":"MIT"},"contracts/libraries/Math.sol":{"keccak256":"0x67472320dcce4ecb23d18c98a9ffb2c792d83e48e0dc4ba56821f874b84b587b","urls":["bzz-raw://280d862391e577d3d8d5a5e130669ec9ca8f3430924628b16066b28d44c370eb","dweb:/ipfs/Qmbt18oKNSeyyKwE9GGyyBXAzs9BtSJmAes7k7BipDEesC"],"license":"MIT"},"contracts/libraries/MessageHashUtils.sol":{"keccak256":"0xeba021d595e7d6678ff6b9792351ee21e48a23505284e4870d0aeb2ef4e35777","urls":["bzz-raw://a57914fdbc71af51384e442769ed42aecd927fcc06cee1fea2b098b31d41444b","dweb:/ipfs/QmTw4fvUcVPderxfoYPjZSq6jQDJS397gqWV3tfkCavvQa"],"license":"MIT"},"contracts/libraries/Nonces.sol":{"keccak256":"0x92b16ac7e2d5fd460043a2897d9b93067475b2f9ac239a89e9dad3da7b112791","urls":["bzz-raw://ebb8254b5c20fe4bafcaf4b08335c34df63a76a227eacbd223ad65619ec6e4a4","dweb:/ipfs/QmbFGraiHjndnDuagH6oJ97J9HYYAKV7b4A6s245JZLXuf"],"license":"MIT"},"contracts/libraries/ShortStrings.sol":{"keccak256":"0xb124a7a1d18881f1414f6ea03bb8242582c0ec9e25a8b240f6465426d50bc64d","urls":["bzz-raw://649c34c8f305460df19b185edf5b5191605baaab3f7edd25b2e83bd24c573d36","dweb:/ipfs/QmdcpatMCpmyry5Bf5YVyte2JDvmKxtn3oyuN4aTQri9QK"],"license":"MIT"},"contracts/libraries/SignedMath.sol":{"keccak256":"0xadcde2b1fabce92825e4ab1f30cf6f59f7a1bdcf4c1040e67fee3bf2abc18e89","urls":["bzz-raw://a311975ca563efd69c59d1089c84a5e14fb59ffe92b7d96448dc9a5694b56bd5","dweb:/ipfs/QmXcLs2iMUfJ8MvdBXsDaDs1hSz9KPetfDAAgRD35okS9q"],"license":"MIT"},"contracts/libraries/StorageSlot.sol":{"keccak256":"0x921ffa1aba73e914855f9ef2977f210a42202e8e55e731e0390747efca3c0000","urls":["bzz-raw://6d57b443d06dcbc0a3a51ee3dccddfa3018288c49a855803cdd2c1805df3878e","dweb:/ipfs/Qmbkoua7k7CuM51daUoN2WHf9fukhvKCAFsG1eQRJcDDq5"],"license":"MIT"},"contracts/libraries/Strings.sol":{"keccak256":"0x10b96c718ed3f69be9995aa5987b12f624fc4c77cba8978e0c42f60e978dc473","urls":["bzz-raw://9fbfe80aeb2814b26b5d9366c48d991ca085f0d51b708aa3e654a4285120b6cf","dweb:/ipfs/QmTZLV4uFWpQqVFyf2YUFWx2ayAkaq1P3aPmcbYUzCdHP7"],"license":"MIT"},"contracts/libraries/draft-IERC6093.sol":{"keccak256":"0x465f0dbe8e33e13af5159f1ff04fa851a38c942df7f02e7a3b73741479999ae2","urls":["bzz-raw://45e255b740645316bab9331d290cf07d6b7c7972464330bb3fe3f6700ab42682","dweb:/ipfs/QmNcpyFpzNYrWoAj6Au8rgZQsqqmFarKcWwpreiXGbXsno"],"license":"MIT"}},"version":1},"id":16}